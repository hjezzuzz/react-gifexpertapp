{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","length","cat","preventDefault","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,0BAAMC,SATW,SAACC,GACdH,EAAWI,OAAS,IACpBN,GAAc,SAACO,GAAD,OAAWL,GAAX,mBAA0BK,OACxCJ,EAAc,KAElBE,EAAEG,mBAKE,2BACIC,KAAO,OACPC,MAASR,EACTS,SAjBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,Y,uBCJlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OAFAc,QAAQC,IAAIL,EAAOV,GAGf,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCJHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACR1B,EAAQC,GACH0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKpB,CAACtB,IAEGuB,EDf0BK,CAAa5B,GAAhCa,EAHyB,EAG9BN,KAAae,EAHiB,EAGjBA,QAOpB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDlB,EAArD,KAEEsB,GAAW,uBAAGJ,UAAU,oCAAb,cAEb,yBAAKA,UAAU,aAGPL,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IACLD,UEOjBoB,EA7BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAQvB,OACI,oCAEI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ6C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI6B,IAAK7B,EACLA,SAAUA,U,MClBtCgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.6b8caeed.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if( inputValue.length > 2){\r\n            setCategories((cat) => [ inputValue, ...cat ]);\r\n            setInputValue('');    \r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type = \"text\" \r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Uxh8FSR6Z9RhqiCqJjwalRWRuHONDrry`;\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    console.log(title, url)\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n\r\n    \r\n\r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>  \r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n        \r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n        .then( imgs => {\r\n          \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });    \r\n         \r\n            \r\n        })\r\n  }, [category]);\r\n\r\n  return state; //Regresa la data y el loading true\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}